'use strict';

//let x = 5; alert(x++);
// Постфиксная система изначльно возвращает значение переменной, т.е в данном случае 5
//let y = 5; alert(++x); 
// Префиксная система возвращает значение переменной + 1, т.е. 6
//[ ] + false - null + true ?
console.log([] + false); // false
console.log(typeof([] + false)); // string
console.log([] + false - null - true); // NaN

let y = 1; 
let x = y = 2; 
alert(x); // Последовательное присваивание. Читаем присваивание в обратном направлении. Т.е. получим 2

[ ] + 1 + 2?
console.log([] + 1 + 2 ); // Получим 12 - строка, так как пустой массив это строка соотвествено происходит склеивание значений в строку//

alert("1"[0]);
// строка и индекс. К каждому элементу строки можно обратиться по индексу, т.е 0 будет индексом строки "1"

// • Чему равно 2 && 1 && null && 0 && undefined ?
console.log(2 && 1 && null && 0 && undefined);

// • Есть ли разница между выражениями? !!( a && b ) и (a && b)?
console.log(!!( a && b ) === (a && b));// !! возращает булиновое значение и соотвественно выражения не будут равны

// • Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
alert( null || 2 && 3 || 4 );// вернется 3. Операции сравнения будут выполняться в зависимоти от приоритета оператора

// • a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
const a = [1, 2, 3]; 
const b = [1, 2, 3];
console.log(a == b); // будет false поскольку а и б разные хранилища информации

// • Что выведет этот код: alert( +"Infinity" ); ?

alert( +"Infinity" ); // Получаем число Infinity

// • Верно ли сравнение: "Ёжик" > "яблоко"?
console.log("Ёжик" > "яблоко"); // в данном случае будет false, происходит по символьное сравнеия учитывая регистр

// • Чему равно 0 || "" || 2 || undefined || true || falsе ?
console.log(0 || "" || 2 || undefined || true || falsе); // вернется 2 так как || запинается на правде и дальше код не отрабатывается.